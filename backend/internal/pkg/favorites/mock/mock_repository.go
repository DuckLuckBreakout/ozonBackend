// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DuckLuckBreakout/ozonBackend/internal/pkg/favorites (interfaces: Repository)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	models "github.com/DuckLuckBreakout/ozonBackend/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddProductToFavorites mocks base method.
func (m *MockRepository) AddProductToFavorites(arg0, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddProductToFavorites", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddProductToFavorites indicates an expected call of AddProductToFavorites.
func (mr *MockRepositoryMockRecorder) AddProductToFavorites(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProductToFavorites", reflect.TypeOf((*MockRepository)(nil).AddProductToFavorites), arg0, arg1)
}

// CreateSortString mocks base method.
func (m *MockRepository) CreateSortString(arg0, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSortString", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSortString indicates an expected call of CreateSortString.
func (mr *MockRepositoryMockRecorder) CreateSortString(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSortString", reflect.TypeOf((*MockRepository)(nil).CreateSortString), arg0, arg1)
}

// DeleteProductFromFavorites mocks base method.
func (m *MockRepository) DeleteProductFromFavorites(arg0, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProductFromFavorites", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProductFromFavorites indicates an expected call of DeleteProductFromFavorites.
func (mr *MockRepositoryMockRecorder) DeleteProductFromFavorites(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProductFromFavorites", reflect.TypeOf((*MockRepository)(nil).DeleteProductFromFavorites), arg0, arg1)
}

// GetCountPages mocks base method.
func (m *MockRepository) GetCountPages(arg0 uint64, arg1 int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCountPages", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCountPages indicates an expected call of GetCountPages.
func (mr *MockRepositoryMockRecorder) GetCountPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCountPages", reflect.TypeOf((*MockRepository)(nil).GetCountPages), arg0, arg1)
}

// GetUserFavorites mocks base method.
func (m *MockRepository) GetUserFavorites(arg0 uint64) (*models.UserFavorites, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserFavorites", arg0)
	ret0, _ := ret[0].(*models.UserFavorites)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserFavorites indicates an expected call of GetUserFavorites.
func (mr *MockRepositoryMockRecorder) GetUserFavorites(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserFavorites", reflect.TypeOf((*MockRepository)(nil).GetUserFavorites), arg0)
}

// SelectRangeFavorites mocks base method.
func (m *MockRepository) SelectRangeFavorites(arg0 *models.PaginatorFavorites, arg1 string, arg2 uint64) ([]*models.ViewFavorite, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectRangeFavorites", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*models.ViewFavorite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectRangeFavorites indicates an expected call of SelectRangeFavorites.
func (mr *MockRepositoryMockRecorder) SelectRangeFavorites(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectRangeFavorites", reflect.TypeOf((*MockRepository)(nil).SelectRangeFavorites), arg0, arg1, arg2)
}
