// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DuckLuckBreakout/ozonBackend/services/cart/pkg/cart (interfaces: Repository)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	models "github.com/DuckLuckBreakout/ozonBackend/services/cart/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddCart mocks base method.
func (m *MockRepository) AddCart(arg0 uint64, arg1 *models.Cart) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCart", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCart indicates an expected call of AddCart.
func (mr *MockRepositoryMockRecorder) AddCart(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCart", reflect.TypeOf((*MockRepository)(nil).AddCart), arg0, arg1)
}

// DeleteCart mocks base method.
func (m *MockRepository) DeleteCart(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCart", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCart indicates an expected call of DeleteCart.
func (mr *MockRepositoryMockRecorder) DeleteCart(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCart", reflect.TypeOf((*MockRepository)(nil).DeleteCart), arg0)
}

// SelectCartById mocks base method.
func (m *MockRepository) SelectCartById(arg0 uint64) (*models.Cart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectCartById", arg0)
	ret0, _ := ret[0].(*models.Cart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectCartById indicates an expected call of SelectCartById.
func (mr *MockRepositoryMockRecorder) SelectCartById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectCartById", reflect.TypeOf((*MockRepository)(nil).SelectCartById), arg0)
}
