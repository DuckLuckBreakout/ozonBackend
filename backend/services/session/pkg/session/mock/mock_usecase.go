// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DuckLuckBreakout/ozonBackend/services/session/pkg/session (interfaces: UseCase)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	models "github.com/DuckLuckBreakout/ozonBackend/services/session/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// CreateNewSession mocks base method.
func (m *MockUseCase) CreateNewSession(arg0 uint64) (*models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewSession", arg0)
	ret0, _ := ret[0].(*models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewSession indicates an expected call of CreateNewSession.
func (mr *MockUseCaseMockRecorder) CreateNewSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewSession", reflect.TypeOf((*MockUseCase)(nil).CreateNewSession), arg0)
}

// DestroySession mocks base method.
func (m *MockUseCase) DestroySession(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroySession", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DestroySession indicates an expected call of DestroySession.
func (mr *MockUseCaseMockRecorder) DestroySession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroySession", reflect.TypeOf((*MockUseCase)(nil).DestroySession), arg0)
}

// GetUserIdBySession mocks base method.
func (m *MockUseCase) GetUserIdBySession(arg0 string) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserIdBySession", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserIdBySession indicates an expected call of GetUserIdBySession.
func (mr *MockUseCaseMockRecorder) GetUserIdBySession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserIdBySession", reflect.TypeOf((*MockUseCase)(nil).GetUserIdBySession), arg0)
}
