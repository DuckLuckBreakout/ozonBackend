version: '3'

services:
  api-db:
    image: duckluckmarket/api-db:${API_DB_TAG}
    restart: unless-stopped
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./scripts/postgresql/init_api_db.sql:/docker-entrypoint-initdb.d/init_api_db.sql
      - ./scripts/postgresql/categories.csv:/categories.csv
      - ./scripts/postgresql/products.csv:/products.csv
    networks:
      - api-network
  api-server-push-db:
    image: redis
    restart: unless-stopped
    networks:
      - api-network
  auth-db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./scripts/postgresql/init_auth_db.sql:/docker-entrypoint-initdb.d/init_auth_db.sql
    networks:
      - auth-network
  session-db:
    image: redis
    restart: unless-stopped
    networks:
      - session-network
  cart-db:
    image: redis
    restart: unless-stopped
    networks:
      - cart-network
  api-server:
    depends_on:
      - api-db
    image: duckluckmarket/api-server:${API_SERVER_TAG}
    container_name: api_server
    restart: unless-stopped
    #    ports:
    #  - "8080:8080"
    volumes:
      - ./log:/log
      - ./configs/envs/api_server:/configs/envs/api_server
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - api-network
      - app-network
  api-server-1:
    depends_on:
      - api-db
    image: duckluckmarket/api-server:${API_SERVER_TAG}
    container_name: api_server_1
    restart: unless-stopped
    volumes:
      - ./log1:/log
      - ./configs1/envs/api_server:/configs/envs/api_server
      - ./configs1/envs/network.env:/configs/envs/network.env
    networks:
      - api-network
      - app-network
  api-server-2:
    depends_on:
      - api-db
    image: duckluckmarket/api-server:${API_SERVER_TAG}
    container_name: api_server_2
    restart: unless-stopped
    volumes:
      - ./log2:/log
      - ./configs2/envs/api_server:/configs/envs/api_server
      - ./configs2/envs/network.env:/configs/envs/network.env
    networks:
      - api-network
      - app-network
  session-service:
    depends_on:
      - session-db
    image: duckluckmarket/session-service:${SESSION_SERVICE_TAG}
    container_name: session_service
    restart: unless-stopped
    volumes:
      - ./log:/log
      - ./configs/envs/session_service:/configs/envs/session_service
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - session-network
      - app-network
  auth-service:
    depends_on:
      - auth-db
    image: duckluckmarket/auth-service:${AUTH_SERVICE_TAG}
    container_name: auth_service
    restart: unless-stopped
    volumes:
      - ./log:/log
      - ./configs/envs/auth_service:/configs/envs/auth_service
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - auth-network
      - app-network
  cart-service:
    depends_on:
      - cart-db
    image: duckluckmarket/cart-service:${CART_SERVICE_TAG}
    container_name: cart_service
    restart: unless-stopped
    volumes:
      - ./log:/log
      - ./configs/envs/cart_service:/configs/envs/cart_service
      - ./configs/envs/network.env:/configs/envs/network.env
    networks:
      - cart-network
      - app-network
  nginx:
    image: ranadeeppolavarapu/nginx-http3:latest
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./privkey.pem:/etc/ssl/private/privkey.pem
      - ./fullchain.pem:/etc/ssl/fullchain.pem
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./h3.nginx.conf:/etc/nginx/conf.d/h3.nginx.conf
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
    networks:
      - app-network
      - api-network
networks:
  api-network:
    driver: bridge
  auth-network:
    driver: bridge
  cart-network:
    driver: bridge
  session-network:
    driver: bridge
  app-network:
    driver: bridge
